before_script:
  - docker info
  - nvidia-smi


# template

# FIXME: https://gitlab.com/nvidia/container-images/cuda/-/issues/93

.build:
  script: |
    docker build --pull --tag ${CI_JOB_ID} $CI_DOCKER_BUILD_ARGS .
    DRIVER=$(find /usr/lib/x86_64-linux-gnu/nvidia -name 'libcuda.so.*' -type f)
    docker run --rm --gpus all --env JULIA_CUDA_MEMORY_LIMIT $CI_DOCKER_RUN_ARGS \
               --volume "$DRIVER:/usr/lib/x86_64-linux-gnu/libcuda.so.1" $CI_JOB_ID -e '
      run(`id`);
      using CUDA;
      CUDA.versioninfo();
      using Pkg;
      Pkg.test(collect(keys(Pkg.installed())));'
    docker rmi ${CI_JOB_ID}
  interruptible: true


# CUDA versions

cuda:11.0:
  extends: .build
  variables:
    CI_DOCKER_BUILD_ARGS: '--build-arg IMAGE=nvidia/cuda:11.0-cudnn8-devel-ubuntu18.04'

cuda:10.2:
  extends: .build
  variables:
    CI_DOCKER_BUILD_ARGS: '--build-arg IMAGE=nvidia/cuda:10.2-cudnn8-devel-ubuntu18.04'

cuda:10.1:
  extends: .build
  variables:
    CI_DOCKER_BUILD_ARGS: '--build-arg IMAGE=nvidia/cuda:10.1-cudnn8-devel-ubuntu18.04'


# special tests

user:
  extends: .build
  variables:
    CI_DOCKER_RUN_ARGS: '--user 1000:1000'
